#!/bin/bash

#declare devshell_default="nix develop .#default"
declare devshell_default="devbox shell"

declare answer
declare system_label

declare nix_direnv_ver="3.0.6"
declare nix_direnv_sha="sha256-RYcUJaRMf8oF5LznDrlCXbkOQrywm0HDv1VjYGaJGdM="

declare -i i

declare devshell
declare -a devshells

declare -a options
declare options_delimiter="|"
declare option_prompt="direnv: which environment would you like to use?"
declare -a parts

declare regex_nix="^nix develop "
declare regex_devbox="^devbox shell"

printf -v system_label "%s-%s" "$(uname --machine)" "$(uname --kernel-name | tr '[:upper:]' '[:lower:]')"

printf "Running on %s\n" "${system_label}"

printf "Inspecting flake...\n\n"
mapfile -t devshells < <({ nix flake show --json | jq -r '.devShells["'"${system_label}"'"] | keys[]'; } 2>/dev/null)

i=0
for devshell in "${devshells[@]}"; do
	options+=("$(printf "nix develop .#%s%s%s\n" "${devshell}" "${options_delimiter}" "${i}")")
	((i += 1))
done

if [[ -f devbox.json ]]; then
	options+=("$(printf "devbox shell%s%s\n" "${options_delimiter}" "${i}")")
	((i += 1))
fi

options+=("abort|${i}")

# answer is the index of the array
answer="$(gum choose --select-if-one --selected="${devshell_default}" --header="${option_prompt}" --label-delimiter="${options_delimiter}" "${options[@]}")"
printf "\n"

# shell command|array index
printf "Selection: %s\n" "${options[${answer}]%%|*}"
printf "\n"

# if starts with nix develop, else if devbox shell else abort
if [[ ${options[${answer}]} =~ ${regex_nix} ]]; then
	if ! has nix_direnv_version || ! nix_direnv_version "${nix_direnv_ver}"; then
		source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/${nix_direnv_ver}/direnvrc" "${nix_direnv_sha}"
	fi

	read -r -a parts <<<"${options[${answer}]%%|*}"
	use flake "${parts[@]: -1}"
elif [[ ${options[${answer}]} =~ ${regex_devbox} ]]; then
	# Automatically sets up your devbox environment whenever you cd into this
	# directory via our direnv integration:

	eval "$(devbox generate direnv --print-envrc)"

	# check out https://www.jetpack.io/devbox/docs/ide_configuration/direnv/
	# for more details
else
	printf "\n"
	printf "Not starting a developer environment.\n"
	printf "\n"

	exit 0
fi

exit 0
